{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects Files\\\\quran_playlist\\\\src\\\\components\\\\Audio2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport styles from \"../AudioPlayer.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = props => {\n  _s();\n  var _audioPlayer$current, _audioPlayer$current2;\n  // state\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  // references\n  const audioPlayer = useRef(); // reference our audio component\n  const progressBar = useRef(); // reference our progress bar\n  const animationRef = useRef(); // reference the animation\n\n  useEffect(() => {\n    console.log(a);\n    const seconds = Math.floor(audioPlayer.current.duration);\n    setDuration(seconds);\n    progressBar.current.max = seconds;\n  }, [audioPlayer === null || audioPlayer === void 0 ? void 0 : (_audioPlayer$current = audioPlayer.current) === null || _audioPlayer$current === void 0 ? void 0 : _audioPlayer$current.loadedmetadata, audioPlayer === null || audioPlayer === void 0 ? void 0 : (_audioPlayer$current2 = audioPlayer.current) === null || _audioPlayer$current2 === void 0 ? void 0 : _audioPlayer$current2.readyState]);\n  const calculateTime = secs => {\n    const minutes = Math.floor(secs / 60);\n    const returnedMinutes = minutes < 10 ? `0${minutes}` : `${minutes}`;\n    const seconds = Math.floor(secs % 60);\n    const returnedSeconds = seconds < 10 ? `0${seconds}` : `${seconds}`;\n    return `${returnedMinutes}:${returnedSeconds}`;\n  };\n  const togglePlayPause = () => {\n    const prevValue = isPlaying;\n    setIsPlaying(!prevValue);\n    if (!prevValue) {\n      audioPlayer.current.play();\n      animationRef.current = requestAnimationFrame(whilePlaying);\n    } else {\n      audioPlayer.current.pause();\n      cancelAnimationFrame(animationRef.current);\n    }\n  };\n  const whilePlaying = () => {\n    progressBar.current.value = audioPlayer.current.currentTime;\n    changePlayerCurrentTime();\n    animationRef.current = requestAnimationFrame(whilePlaying);\n  };\n  const changeRange = () => {\n    audioPlayer.current.currentTime = progressBar.current.value;\n    changePlayerCurrentTime();\n  };\n  const changePlayerCurrentTime = () => {\n    progressBar.current.style.setProperty('--seek-before-width', `${progressBar.current.value / duration * 100}%`);\n    setCurrentTime(progressBar.current.value);\n  };\n  const backThirty = () => {\n    progressBar.current.value = Number(progressBar.current.value - 30);\n    changeRange();\n  };\n  const forwardThirty = () => {\n    progressBar.current.value = Number(progressBar.current.value + 30);\n    changeRange();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.audioPlayer,\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioPlayer,\n      src: props.audiosrc,\n      preload: \"metadata\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.forwardBackward,\n      onClick: backThirty,\n      children: \"after 30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePlayPause,\n      className: styles.playPause,\n      children: isPlaying ? \"pause\" : \"play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.forwardBackward,\n      onClick: forwardThirty,\n      children: \"30 before\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.currentTime,\n      children: calculateTime(currentTime)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        className: styles.progressBar,\n        defaultValue: \"0\",\n        ref: progressBar,\n        onChange: changeRange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.duration,\n      children: duration && !isNaN(duration) && calculateTime(duration)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioPlayer, \"f09q83bfkvXaw9MTtj6dBXFcqdw=\");\n_c = AudioPlayer;\nexport { AudioPlayer };\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","styles","AudioPlayer","props","isPlaying","setIsPlaying","duration","setDuration","currentTime","setCurrentTime","audioPlayer","progressBar","animationRef","console","log","a","seconds","Math","floor","current","max","loadedmetadata","readyState","calculateTime","secs","minutes","returnedMinutes","returnedSeconds","togglePlayPause","prevValue","play","requestAnimationFrame","whilePlaying","pause","cancelAnimationFrame","value","changePlayerCurrentTime","changeRange","style","setProperty","backThirty","Number","forwardThirty","audiosrc","forwardBackward","playPause","isNaN"],"sources":["D:/Projects Files/quran_playlist/src/components/Audio2.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport styles from \"../AudioPlayer.module.css\";\r\n\r\n\r\nconst AudioPlayer = (props) => {\r\n  // state\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [duration, setDuration] = useState(0);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n\r\n  // references\r\n  const audioPlayer = useRef();   // reference our audio component\r\n  const progressBar = useRef();   // reference our progress bar\r\n  const animationRef = useRef();  // reference the animation\r\n\r\n  useEffect(() => {\r\n    console.log(a)\r\n    const seconds = Math.floor(audioPlayer.current.duration);\r\n    setDuration(seconds);\r\n    progressBar.current.max = seconds;\r\n  }, [audioPlayer?.current?.loadedmetadata, audioPlayer?.current?.readyState]);\r\n\r\n  const calculateTime = (secs) => {\r\n    const minutes = Math.floor(secs / 60);\r\n    const returnedMinutes = minutes < 10 ? `0${minutes}` : `${minutes}`;\r\n    const seconds = Math.floor(secs % 60);\r\n    const returnedSeconds = seconds < 10 ? `0${seconds}` : `${seconds}`;\r\n    return `${returnedMinutes}:${returnedSeconds}`;\r\n  }\r\n\r\n  const togglePlayPause = () => {\r\n    const prevValue = isPlaying;\r\n    setIsPlaying(!prevValue);\r\n    if (!prevValue) {\r\n      audioPlayer.current.play();\r\n      animationRef.current = requestAnimationFrame(whilePlaying)\r\n    } else {\r\n      audioPlayer.current.pause();\r\n      cancelAnimationFrame(animationRef.current);\r\n    }\r\n  }\r\n\r\n  const whilePlaying = () => {\r\n    progressBar.current.value = audioPlayer.current.currentTime;\r\n    changePlayerCurrentTime();\r\n    animationRef.current = requestAnimationFrame(whilePlaying);\r\n  }\r\n\r\n  const changeRange = () => {\r\n    audioPlayer.current.currentTime = progressBar.current.value;\r\n    changePlayerCurrentTime();\r\n  }\r\n\r\n  const changePlayerCurrentTime = () => {\r\n    progressBar.current.style.setProperty('--seek-before-width', `${progressBar.current.value / duration * 100}%`)\r\n    setCurrentTime(progressBar.current.value);\r\n  }\r\n\r\n  const backThirty = () => {\r\n    progressBar.current.value = Number(progressBar.current.value - 30);\r\n    changeRange();\r\n  }\r\n\r\n  const forwardThirty = () => {\r\n    progressBar.current.value = Number(progressBar.current.value + 30);\r\n    changeRange();\r\n  }\r\n\r\n  return (\r\n    <div className={styles.audioPlayer}>\r\n      <audio ref={audioPlayer} src={props.audiosrc} preload=\"metadata\"></audio>\r\n      <button className={styles.forwardBackward} onClick={backThirty}>after 30</button>\r\n      <button onClick={togglePlayPause} className={styles.playPause}>\r\n        {isPlaying ? \"pause\": \"play\"}\r\n      </button>\r\n      <button className={styles.forwardBackward} onClick={forwardThirty}>30 before</button>\r\n\r\n      {/* current time */}\r\n      <div className={styles.currentTime}>{calculateTime(currentTime)}</div>\r\n\r\n      {/* progress bar */}\r\n      <div>\r\n        <input type=\"range\" className={styles.progressBar} defaultValue=\"0\" ref={progressBar} onChange={changeRange} />\r\n      </div>\r\n\r\n      {/* duration */}\r\n      <div className={styles.duration}>{(duration && !isNaN(duration)) && calculateTime(duration)}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { AudioPlayer }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}