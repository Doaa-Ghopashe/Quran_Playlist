{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects Files\\\\quran_playlist\\\\src\\\\components\\\\Pagination.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// import { request } from 'graphql-request';\nimport Paginate from './Paginate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagination = () => {\n  _s();\n  const [blogPosts, setBlogPosts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(3);\n  let getData = () => {\n    fetch(`http://localhost:3001/playlist`).then(response => response.json()).then(result => setBlogPosts(result));\n  };\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = blogPosts.slice(indexOfFirstPost, indexOfLastPost);\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  const previousPage = () => {\n    if (currentPage !== 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  const nextPage = () => {\n    if (currentPage !== Math.ceil(blogPosts.length / postsPerPage)) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }, this), blogPosts ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-content-section\",\n      children: /*#__PURE__*/_jsxDEV(Paginate, {\n        postsPerPage: postsPerPage\n        // totalPosts={blogPosts.length}\n        ,\n        paginate: paginate,\n        previousPage: previousPage,\n        nextPage: nextPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n};\n_s(Pagination, \"U5Sg+K69FHP008vg1qqo+eJRAgM=\");\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","useState","useEffect","Paginate","Pagination","blogPosts","setBlogPosts","currentPage","setCurrentPage","postsPerPage","getData","fetch","then","response","json","result","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","previousPage","nextPage","Math","ceil","length"],"sources":["D:/Projects Files/quran_playlist/src/components/Pagination.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// import { request } from 'graphql-request';\r\nimport Paginate from './Paginate';\r\n \r\nconst Pagination = () => {\r\n  const [blogPosts, setBlogPosts] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(3);\r\n  let getData = ()=>{\r\n    fetch(`http://localhost:3001/playlist`)\r\n    .then((response)=> response.json()).\r\n    then((result) => setBlogPosts(result)) \r\n}\r\n\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = blogPosts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n };\r\n \r\n   const previousPage = () => {\r\n      if (currentPage !== 1) {\r\n         setCurrentPage(currentPage - 1);\r\n      }\r\n   };\r\n \r\n   const nextPage = () => {\r\n      if (currentPage !== Math.ceil(blogPosts.length / postsPerPage)) {\r\n         setCurrentPage(currentPage + 1);\r\n      }\r\n   };\r\n \r\n   return (\r\n      <div className=\"container\">\r\n         <div className=\"title\">\r\n            {/* {console.log(blogPosts)} */}\r\n         </div>\r\n         {blogPosts ? (\r\n            <div className=\"blog-content-section\">\r\n               {/* ... */}\r\n               <Paginate\r\n                  postsPerPage={postsPerPage}\r\n                  // totalPosts={blogPosts.length}\r\n                  paginate={paginate}\r\n                  previousPage={previousPage}\r\n                  nextPage={nextPage}\r\n               />\r\n            </div>\r\n         ) : (\r\n            <div className=\"loading\">Loading...</div>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n \r\nexport default Pagination;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AACA,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAElC,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACQ,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAClC,IAAIS,OAAO,GAAG,MAAI;IAChBC,KAAK,CAAE,gCAA+B,CAAC,CACtCC,IAAI,CAAEC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,MAAM,IAAKT,YAAY,CAACS,MAAM,CAAC,CAAC;EAC1C,CAAC;EAEC,MAAMC,eAAe,GAAGT,WAAW,GAAGE,YAAY;EAClD,MAAMQ,gBAAgB,GAAGD,eAAe,GAAGP,YAAY;EACvD,MAAMS,YAAY,GAAGb,SAAS,CAACc,KAAK,CAACF,gBAAgB,EAAED,eAAe,CAAC;EAEvE,MAAMI,QAAQ,GAAIC,UAAU,IAAK;IAC/Bb,cAAc,CAACa,UAAU,CAAC;EAC7B,CAAC;EAEC,MAAMC,YAAY,GAAG,MAAM;IACxB,IAAIf,WAAW,KAAK,CAAC,EAAE;MACpBC,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IAClC;EACH,CAAC;EAED,MAAMgB,QAAQ,GAAG,MAAM;IACpB,IAAIhB,WAAW,KAAKiB,IAAI,CAACC,IAAI,CAACpB,SAAS,CAACqB,MAAM,GAAGjB,YAAY,CAAC,EAAE;MAC7DD,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IAClC;EACH,CAAC;EAED,oBACG;IAAK,SAAS,EAAC,WAAW;IAAA,wBACvB;MAAK,SAAS,EAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAEhB,EACLF,SAAS,gBACP;MAAK,SAAS,EAAC,sBAAsB;MAAA,uBAElC,QAAC,QAAQ;QACN,YAAY,EAAEI;QACd;QAAA;QACA,QAAQ,EAAEW,QAAS;QACnB,YAAY,EAAEE,YAAa;QAC3B,QAAQ,EAAEC;MAAS;QAAA;QAAA;QAAA;MAAA;IACpB;MAAA;MAAA;MAAA;IAAA,QACC,gBAEN;MAAK,SAAS,EAAC,SAAS;MAAA,UAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QACrC;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEZ,CAAC;AAAC,GAnDInB,UAAU;AAAA,KAAVA,UAAU;AAqDhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}