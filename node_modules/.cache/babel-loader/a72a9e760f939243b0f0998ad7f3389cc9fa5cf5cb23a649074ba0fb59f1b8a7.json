{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects Files\\\\quran_playlist\\\\src\\\\pages\\\\PlayAudio.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PlayAudio() {\n  _s();\n  let {\n    readername,\n    surahname\n  } = useParams();\n  let [data, setData] = useState([]);\n  let getData = () => {\n    fetch(`http://localhost:3000/playlist/?readernameEN=${readername}`).then(response => response.json()).then(result => {\n      result = result.map(p => {\n        if (p.surahEN == surahname) return p;\n      });\n      let SETVar = new Set(result);\n      SETVar.delete(undefined);\n      setData(Array.from(SETVar));\n    });\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row align-items-center justify-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-xl-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"audiobox\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: item.surahAR\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false);\n}\n_s(PlayAudio, \"GjdF4s/sQXxrr9oxjx5O2t0x8/Q=\", false, function () {\n  return [useParams];\n});\n_c = PlayAudio;\nvar _c;\n$RefreshReg$(_c, \"PlayAudio\");","map":{"version":3,"names":["React","useState","useEffect","useParams","PlayAudio","readername","surahname","data","setData","getData","fetch","then","response","json","result","map","p","surahEN","SETVar","Set","delete","undefined","Array","from","item","surahAR","id"],"sources":["D:/Projects Files/quran_playlist/src/pages/PlayAudio.js"],"sourcesContent":["import React ,{useState , useEffect} from 'react'\r\nimport { useParams } from 'react-router-dom';\r\n\r\nexport default function PlayAudio() {\r\n  let {readername,surahname} = useParams();\r\n  let [data, setData] = useState([]);\r\n  let getData = ()=>{\r\n    fetch(`http://localhost:3000/playlist/?readernameEN=${readername}`)\r\n    .then((response)=> response.json()).\r\n    then((result) => \r\n            {\r\n              result = result.map(p => \r\n              { \r\n                if(p.surahEN==surahname)\r\n                return p\r\n              });\r\n              let SETVar = new Set(result);\r\n              SETVar.delete(undefined);\r\n              setData(Array.from(SETVar))\r\n            }\r\n        ) \r\n} \r\nuseEffect(()=>{\r\n  getData()\r\n} , [])\r\n\r\n  return (\r\n    <>\r\n    {data.map((item)=>{\r\n      return(\r\n        <div className='container' key={item.id}>\r\n          <div className='row align-items-center justify-content'>\r\n            <div className='col-xl-12'>\r\n              <div className='audiobox'>\r\n              <h1>{item.surahAR}</h1>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      )\r\n    })}\r\n    </>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAGC,SAAS,QAAO,OAAO;AACjD,SAASC,SAAS,QAAQ,kBAAkB;AAAC;AAAA;AAE7C,eAAe,SAASC,SAAS,GAAG;EAAA;EAClC,IAAI;IAACC,UAAU;IAACC;EAAS,CAAC,GAAGH,SAAS,EAAE;EACxC,IAAI,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClC,IAAIQ,OAAO,GAAG,MAAI;IAChBC,KAAK,CAAE,gDAA+CL,UAAW,EAAC,CAAC,CAClEM,IAAI,CAAEC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,MAAM,IACJ;MACEA,MAAM,GAAGA,MAAM,CAACC,GAAG,CAACC,CAAC,IACrB;QACE,IAAGA,CAAC,CAACC,OAAO,IAAEX,SAAS,EACvB,OAAOU,CAAC;MACV,CAAC,CAAC;MACF,IAAIE,MAAM,GAAG,IAAIC,GAAG,CAACL,MAAM,CAAC;MAC5BI,MAAM,CAACE,MAAM,CAACC,SAAS,CAAC;MACxBb,OAAO,CAACc,KAAK,CAACC,IAAI,CAACL,MAAM,CAAC,CAAC;IAC7B,CAAC,CACJ;EACT,CAAC;EACDhB,SAAS,CAAC,MAAI;IACZO,OAAO,EAAE;EACX,CAAC,EAAG,EAAE,CAAC;EAEL,oBACE;IAAA,UACCF,IAAI,CAACQ,GAAG,CAAES,IAAI,IAAG;MAChB,oBACE;QAAK,SAAS,EAAC,WAAW;QAAA,uBACxB;UAAK,SAAS,EAAC,wCAAwC;UAAA,uBACrD;YAAK,SAAS,EAAC,WAAW;YAAA,uBACxB;cAAK,SAAS,EAAC,UAAU;cAAA,uBACzB;gBAAA,UAAKA,IAAI,CAACC;cAAO;gBAAA;gBAAA;gBAAA;cAAA;YAAM;cAAA;cAAA;cAAA;YAAA;UACjB;YAAA;YAAA;YAAA;UAAA;QACF;UAAA;UAAA;UAAA;QAAA;MACF,GAPwBD,IAAI,CAACE,EAAE;QAAA;QAAA;QAAA;MAAA,QAQjC;IAGV,CAAC;EAAC,iBACC;AAEP;AAAC,GAzCuBtB,SAAS;EAAA,QACFD,SAAS;AAAA;AAAA,KADhBC,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}