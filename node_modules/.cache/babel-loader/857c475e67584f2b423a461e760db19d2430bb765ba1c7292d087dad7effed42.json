{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects Files\\\\quran_playlist\\\\src\\\\pages\\\\Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Card from '../components/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Playlist(props) {\n  _s();\n  let [data, setData] = useState([]);\n  let {\n    readername\n  } = useParams();\n  let getData = () => {\n    fetch(`http://localhost:3000/playlist/?reader=${readername}`).then(response => response.json()).then(result => setData(result));\n  };\n  useEffect(() => {\n    getData();\n  }, [readername]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"this is \", readername, \" playlist\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: data.map(Item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xl-3\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            data: Item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this)\n        }, Item.surah, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Playlist, \"GZr01L7wHcu9c6oiJ3jUjaqxYcM=\", false, function () {\n  return [useParams];\n});\n_c = Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Card","Playlist","props","data","setData","readername","getData","fetch","then","response","json","result","map","Item","surah"],"sources":["D:/Projects Files/quran_playlist/src/pages/Playlist.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport Card from '../components/Card';\r\n\r\nexport default function Playlist(props) {\r\n    let [data , setData] = useState([]);\r\n    let {readername} = useParams();\r\n    let getData = ()=>{\r\n        fetch(`http://localhost:3000/playlist/?reader=${readername}`)\r\n        .then((response)=> response.json()).\r\n        then((result) => setData(result))\r\n    }\r\n    useEffect(()=>{\r\n      getData();\r\n    },[readername])\r\n  return (\r\n    <div className='container'>\r\n      <h1>this is {readername} playlist</h1>\r\n      <div className='row'>\r\n        \r\n        {data.map((Item)=>{\r\n            return(\r\n                <div className='col-xl-3' key={Item.surah}>\r\n                    <Card data={Item}/>\r\n                </div>\r\n            )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,IAAI,MAAM,oBAAoB;AAAC;AAEtC,eAAe,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EACpC,IAAI,CAACC,IAAI,EAAGC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACnC,IAAI;IAACO;EAAU,CAAC,GAAGN,SAAS,EAAE;EAC9B,IAAIO,OAAO,GAAG,MAAI;IACdC,KAAK,CAAE,0CAAyCF,UAAW,EAAC,CAAC,CAC5DG,IAAI,CAAEC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,MAAM,IAAKP,OAAO,CAACO,MAAM,CAAC,CAAC;EACrC,CAAC;EACDd,SAAS,CAAC,MAAI;IACZS,OAAO,EAAE;EACX,CAAC,EAAC,CAACD,UAAU,CAAC,CAAC;EACjB,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB;MAAA,WAAI,UAAQ,EAACA,UAAU,EAAC,WAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACtC;MAAK,SAAS,EAAC,KAAK;MAAA,UAEjBF,IAAI,CAACS,GAAG,CAAEC,IAAI,IAAG;QACd,oBACI;UAAK,SAAS,EAAC,UAAU;UAAA,uBACrB,QAAC,IAAI;YAAC,IAAI,EAAEA;UAAK;YAAA;YAAA;YAAA;UAAA;QAAE,GADQA,IAAI,CAACC,KAAK;UAAA;UAAA;UAAA;QAAA,QAEnC;MAEd,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA1BuBb,QAAQ;EAAA,QAETF,SAAS;AAAA;AAAA,KAFRE,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}