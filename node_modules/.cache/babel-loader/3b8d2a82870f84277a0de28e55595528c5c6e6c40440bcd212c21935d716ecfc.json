{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects Files\\\\quran_playlist\\\\src\\\\pages\\\\Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport Card from '../components/Card';\nimport Pagination from '../components/Pagination';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Playlist() {\n  _s();\n  let [data, setData] = useState([]);\n  let {\n    readername\n  } = useParams();\n  let temp;\n  // let [temp] = useState(new Set());\n  let [searchword, setSearchWord] = useState('');\n  let getData = () => {\n    fetch(`http://localhost:3001/playlist/?readernameEN=${readername}`).then(response => response.json()).then(result => setData(result));\n  };\n  useEffect(() => {\n    getData();\n  }, [readername]);\n  if (data.length > 1) {\n    data.sort((a, b) => a.surahnum - b.surahnum);\n  }\n  let handleChange = e => {\n    // temp.clear()\n    setSearchWord(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchbox\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          onKeyDown: handleChange,\n          onChange: handleChange,\n          placeholder: \"Enter surah name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards-container row\",\n        children: data.map((Item, index, Array) => {\n          let surahname = Item.surahEN;\n          if (surahname.toLowerCase().includes(searchword.trim())) {\n            temp = new Set(Item);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-xl-3 pt-5\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/playlist/${Item.readernameEN}/${Item.surahEN}`,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  data: Item\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this)\n            }, Item.surahEN, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), console.log(temp)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(Playlist, \"2qr4bhfgcMy4SPl7QrSTWXvXJBU=\", false, function () {\n  return [useParams];\n});\n_c = Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","Card","Pagination","Playlist","data","setData","readername","temp","searchword","setSearchWord","getData","fetch","then","response","json","result","length","sort","a","b","surahnum","handleChange","e","target","value","map","Item","index","Array","surahname","surahEN","toLowerCase","includes","trim","Set","readernameEN","console","log"],"sources":["D:/Projects Files/quran_playlist/src/pages/Playlist.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useParams , Link } from 'react-router-dom';\r\nimport Card from '../components/Card';\r\nimport Pagination from '../components/Pagination';\r\n\r\nexport default function Playlist() {\r\n  let [data , setData] = useState([]);\r\n  let {readername} = useParams();\r\n  let temp;\r\n  // let [temp] = useState(new Set());\r\n  let [searchword , setSearchWord] = useState('');\r\n  let getData = ()=>{\r\n      fetch(`http://localhost:3001/playlist/?readernameEN=${readername}`)\r\n      .then((response)=> response.json()).\r\n      then((result) => setData(result)) \r\n  }\r\n  useEffect(()=>{\r\n    getData();\r\n  },[readername])\r\n\r\n  if(data.length > 1){\r\n    data.sort((a ,b) => a.surahnum- b.surahnum)\r\n  }\r\n\r\n  let handleChange = (e)=>{\r\n    // temp.clear()\r\n    setSearchWord(e.target.value);\r\n  }\r\n  return (\r\n    <>\r\n    <div className='container'>\r\n      <div className=\"searchbox\">\r\n        <input type=\"text\" className=\"form-control\" onKeyDown={handleChange} onChange={handleChange} placeholder=\"Enter surah name \"/>\r\n      </div>\r\n      <div className='cards-container row'>\r\n        {\r\n        data.map((Item,index,Array)=>{\r\n          let surahname = Item.surahEN;\r\n          if(surahname.toLowerCase().includes(searchword.trim())){\r\n            temp = new Set(Item)\r\n            return(\r\n              <div className='col-xl-3 pt-5' key={Item.surahEN}>\r\n                <Link to={`/playlist/${Item.readernameEN}/${Item.surahEN}`}>\r\n                  <Card data={Item}/>\r\n                </Link>\r\n              </div>\r\n            )\r\n          }\r\n        })\r\n        }\r\n      </div>\r\n      {console.log(temp)}\r\n      {/* {temp.size > 0&&<div className='pagination py-0 justify-content-center'><Pagination datalength={temp.size}/></div>} */}\r\n      \r\n    </div>\r\n    </>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAGC,IAAI,QAAQ,kBAAkB;AACnD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,UAAU,MAAM,0BAA0B;AAAC;AAAA;AAElD,eAAe,SAASC,QAAQ,GAAG;EAAA;EACjC,IAAI,CAACC,IAAI,EAAGC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACnC,IAAI;IAACQ;EAAU,CAAC,GAAGP,SAAS,EAAE;EAC9B,IAAIQ,IAAI;EACR;EACA,IAAI,CAACC,UAAU,EAAGC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC/C,IAAIY,OAAO,GAAG,MAAI;IACdC,KAAK,CAAE,gDAA+CL,UAAW,EAAC,CAAC,CAClEM,IAAI,CAAEC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,MAAM,IAAKV,OAAO,CAACU,MAAM,CAAC,CAAC;EACrC,CAAC;EACDlB,SAAS,CAAC,MAAI;IACZa,OAAO,EAAE;EACX,CAAC,EAAC,CAACJ,UAAU,CAAC,CAAC;EAEf,IAAGF,IAAI,CAACY,MAAM,GAAG,CAAC,EAAC;IACjBZ,IAAI,CAACa,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,QAAQ,GAAED,CAAC,CAACC,QAAQ,CAAC;EAC7C;EAEA,IAAIC,YAAY,GAAIC,CAAC,IAAG;IACtB;IACAb,aAAa,CAACa,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EACD,oBACE;IAAA,uBACA;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB;QAAK,SAAS,EAAC,WAAW;QAAA,uBACxB;UAAO,IAAI,EAAC,MAAM;UAAC,SAAS,EAAC,cAAc;UAAC,SAAS,EAAEH,YAAa;UAAC,QAAQ,EAAEA,YAAa;UAAC,WAAW,EAAC;QAAmB;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QAC1H,eACN;QAAK,SAAS,EAAC,qBAAqB;QAAA,UAElCjB,IAAI,CAACqB,GAAG,CAAC,CAACC,IAAI,EAACC,KAAK,EAACC,KAAK,KAAG;UAC3B,IAAIC,SAAS,GAAGH,IAAI,CAACI,OAAO;UAC5B,IAAGD,SAAS,CAACE,WAAW,EAAE,CAACC,QAAQ,CAACxB,UAAU,CAACyB,IAAI,EAAE,CAAC,EAAC;YACrD1B,IAAI,GAAG,IAAI2B,GAAG,CAACR,IAAI,CAAC;YACpB,oBACE;cAAK,SAAS,EAAC,eAAe;cAAA,uBAC5B,QAAC,IAAI;gBAAC,EAAE,EAAG,aAAYA,IAAI,CAACS,YAAa,IAAGT,IAAI,CAACI,OAAQ,EAAE;gBAAA,uBACzD,QAAC,IAAI;kBAAC,IAAI,EAAEJ;gBAAK;kBAAA;kBAAA;kBAAA;gBAAA;cAAE;gBAAA;gBAAA;gBAAA;cAAA;YACd,GAH2BA,IAAI,CAACI,OAAO;cAAA;cAAA;cAAA;YAAA,QAI1C;UAEV;QACF,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAEE,EACLM,OAAO,CAACC,GAAG,CAAC9B,IAAI,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA;EAGd,iBACH;AAEP;AAAC,GApDuBJ,QAAQ;EAAA,QAEXJ,SAAS;AAAA;AAAA,KAFNI,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}